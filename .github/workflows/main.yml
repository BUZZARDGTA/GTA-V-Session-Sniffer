name: Build and Release for Windows

on:
  push:
    branches:
      - main
    paths:
      - 'Session_Sniffer.py'  # Trigger only when changes are made to this file

jobs:
  generate-tag:
    runs-on: ubuntu-22.04
    name: Generate Tag
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Setup Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: 3.x

      - name: Debug Parent Directory Structure for Troubleshooting
        run: |
          echo "Displaying the file structure for debugging in the parent directory:"
          ls -la "$(dirname "$GITHUB_WORKSPACE")"
          tree "$(dirname "$GITHUB_WORKSPACE")"

      - name: Generate Tag Using Python Script
        id: generate_tag
        run: |
          # Get the generated tag from the Python script
          TAG_NAME=$(python "$GITHUB_WORKSPACE/.github/workflows/generate_tag.py")

          # Check if the tag already exists
          if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            echo "Error: Tag $TAG_NAME already exists."
            exit 1
          fi

          # If the tag does not exist, continue and set the tag
          echo "tag_name=$TAG_NAME" >> $GITHUB_ENV

  build-x64:
    needs: [generate-tag]
    runs-on: windows-latest
    name: Build Windows x64 Executable
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Setup Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: 3.x
          architecture: x64

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build with PyInstaller
        run: |
          pyinstaller Session_Sniffer-x64.spec
        # Output will be in the `dist/` folder

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.5.0
        with:
          name: Session_Sniffer-x64
          path: dist/Session_Sniffer-x64.exe

  build-x86:
    needs: [generate-tag]
    runs-on: windows-latest
    name: Build Windows x86 Executable
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Setup Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: 3.x
          architecture: x86

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build with PyInstaller
        run: |
          pyinstaller Session_Sniffer-x86.spec
        # Output will be in the `dist/` folder

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.5.0
        with:
          name: Session_Sniffer-x86
          path: dist/Session_Sniffer-x86.exe

  release:
    needs: [generate-tag, build-x64, build-x86]
    runs-on: ubuntu-latest
    name: Create Release
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Download a Build Artifact
        uses: actions/download-artifact@v4.1.8
        with:
          path: artifact
          name: Session_Sniffer-x64

      - name: Download a Build Artifact
        uses: actions/download-artifact@v4.1.8
        with:
          path: artifact
          name: Session_Sniffer-x86

      - name: Create Release
        uses: ncipollo/release-action@v1.14.0
        with:
          artifacts: |
            artifact/Session_Sniffer-x64.exe
            artifact/Session_Sniffer-x86.exe
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Release ${{ env.tag_name }}
          tag: ${{ env.tag_name }}
          commit: ${{ github.sha }}
          prerelease: true
